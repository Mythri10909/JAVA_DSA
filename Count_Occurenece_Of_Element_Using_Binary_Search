import java.io.*;

class Count_Occurenece_Of_Element_Using_Binary_Search {

    public static int first_count_Occurenece(int []a,int ele){
    int n=a.length;int fcount=0;
    int low=0,high=n-1;
    while(low<=high){
        int mid=(low+high)/2;
        if(ele==a[mid])
        {
            fcount=mid;
            high=mid-1;
        }
        else if(ele>a[mid]){
            low=mid+1;
        }
        else{
            high=mid-1;
        }
    }
    return fcount;
    }   
    public static int last_count_Occurenece(int []a,int ele){
    int lcount=0;   int n=a.length;int low=0,high=n-1;
        while(low<=high){
        int mid=(low+high)/2;
        if(ele==a[mid])
        {
            lcount=mid;
            low=mid+1;
        }
        else if(ele>a[mid]){
            low=mid+1;
        }
        else{
            high=mid-1;
        }
        }
    return lcount;   
    }
	public static void main (String[] args) {
	    int a[]={1,2,3,4,5,8,9,9,9,9,9,9,15,16,239,345,876,2345,2345,765432};
	    int ele=2345;
	    int f=first_count_Occurenece(a,ele);
	    int l=last_count_Occurenece(a,ele);
	    if(l==0 && f==0)System.out.print("there is no such element in list");
	    else
	    System.out.print("number of occurences are "+(l-f+1));
	}
}
